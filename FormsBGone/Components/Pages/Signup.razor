@page "/signup"
@using Microsoft.AspNetCore.Components.Authorization
@inject IAccountService accountService
@inject IJSRuntime js
@inject NavigationManager NavManager
@inject AuthenticationStateProvider AuthStateProvider
@rendermode InteractiveServer

<div class="landing-page">
    <div class="login-wrapper">
        <div class="login-content">
            <div class="logo-section">
                <img src="/Images/logoText.png" alt="Forms-B-Gone Logo">
            </div>

            @if (!string.IsNullOrEmpty(AlertMessage))
            {
                <div class="alert">
                    @AlertMessage
                </div>
            }

            <EditForm Model="@Register" OnValidSubmit="HandleSignup">
                <input type="text" placeholder="Email" @bind="Register.Email">
                <input type="text" placeholder="Username" @bind="Register.Username">
                <input type="password" placeholder="Password" @bind="Register.Password">
                <input type="password" placeholder="Confirm Password" @bind="Register.ConfirmPassword">
                <button type="button" class="btn btn-primary" @onclick="HandleSignup">Sign Up</button>
            </EditForm>

            <div class="signup">
                <span class="signup">
                    Already have an account?
                    <a href="/">Login</a>
                </span>
            </div>
        </div>
    </div>
</div>

@code {
    public RegisterDTO Register = new();
    public string AlertMessage { get; set; }

    private bool ValidateInformation(RegisterDTO registerInfo)
    {
        // Check if any of the fields are empty
        if (string.IsNullOrWhiteSpace(Register.Email) ||
            string.IsNullOrWhiteSpace(Register.Username) ||
            string.IsNullOrWhiteSpace(Register.Password) ||
            string.IsNullOrWhiteSpace(Register.ConfirmPassword))
        {
            AlertMessage = "All fields are required."; // Set alert message
            return false;
        }

        if (Register.Email.Contains("@") && 
            (Register.Email.Contains(".com") || Register.Email.Contains("okaloosa.k12.fl.us")))
            return true;
        else
        {
            AlertMessage = "Email must be a valid Email Address.";
            return false;
        }
    }

    private async Task HandleSignup()
    {
        if (!ValidateInformation(Register))
            return;

        // Call registration service
        RegistrationResponse response = await accountService.RegisterAsync(Register);

        // Log the response message to the console
        Console.WriteLine($"Response Message: {response.Message}"); // Log to console

        AlertMessage = response.Message; // Set alert message based on response

        if (response.Flag)
        {
            Register = new(); 
            NavManager.NavigateTo("/", forceLoad: true);
        }
    }
}
