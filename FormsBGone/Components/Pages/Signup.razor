@page "/signup"
@using Microsoft.AspNetCore.Components.Authorization
@inject IAccountService accountService
@inject IJSRuntime js
@inject NavigationManager NavManager
@inject AuthenticationStateProvider AuthStateProvider
@rendermode InteractiveServer

<div class="landing-page">
    <div class="login-wrapper">
        <div class="login-content">
            <div class="logo-section">
                <img src="/Images/logoText.png" alt="Forms-B-Gone Logo">
            </div>
            <EditForm Model="@Register" OnValidSubmit="HandleSignup">
                <input type="text" placeholder="Email" @bind="Register.Email">
                <input type="text" placeholder="Username" @bind="Register.Username">
                <input type="password" placeholder="Password" @bind="Register.Password">
                <input type="password" placeholder="Confirm Password" @bind="Register.ConfirmPassword">
                <button type="button" class="btn btn-primary" @onclick="HandleSignup">Sign Up</button>
            </EditForm>

            <div class="signup">
                <span class="signup">
                    Already have an account?
                    <a href="/">Login</a>
                </span>
            </div>
        </div>
    </div>
</div>

@code {

    public RegisterDTO Register = new();

    private async Task HandleSignup()
    {
        RegistrationResponse response = await accountService.RegisterAsync(Register);
        if (!response.Flag)
        {
            await js.InvokeVoidAsync("alert", response.Message);
            return;
        }
        await js.InvokeVoidAsync("alert", response.Message);
        Register = new();

        NavManager.NavigateTo("/", forceLoad: true);
    }
}
